/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inf;

import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Raveen
 */
public class home extends javax.swing.JFrame {

    /**
     * Creates new form home
     */
    public home() {
        initComponents();
        setIconImage();
    }
    
     
    
     void LoadLecs()
    {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/2checkdb", "root", "");
            Statement st = con.createStatement();
            ResultSet rst = st.executeQuery("SELECT * FROM lecs");
           
            
            while(onG.getRowCount()>0)
            {
                ((DefaultTableModel)onG.getModel()).removeRow(0);
            }
            
            int col = rst.getMetaData().getColumnCount();
            while(rst.next())
            {
              Object [] rows = new Object[col];
              for(int i=1;i<=col;i++)
              {
                  rows[i-1] = rst.getObject(i);
              }
              ((DefaultTableModel)onG.getModel()).insertRow(rst.getRow() -1, rows);
            
            }
            rst.close();
            st.close();
           
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CrudForAdminOnG.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CrudForAdminOnG.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
        
        
    }
    
     
     void LoadLecsUPC()
    {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/2checkdb", "root", "");
            Statement st = con.createStatement();
            ResultSet rst = st.executeQuery("SELECT * FROM lecsupc");
           
            
            while(UpC.getRowCount()>0)
            {
                ((DefaultTableModel)UpC.getModel()).removeRow(0);
            }
            
            int col = rst.getMetaData().getColumnCount();
            while(rst.next())
            {
              Object [] rows = new Object[col];
              for(int i=1;i<=col;i++)
              {
                  rows[i-1] = rst.getObject(i);
              }
              ((DefaultTableModel)UpC.getModel()).insertRow(rst.getRow() -1, rows);
            
            }
            rst.close();
            st.close();
           
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CrudForAdminOnG.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CrudForAdminOnG.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
        
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        attendence = new javax.swing.JButton();
        examresults = new javax.swing.JButton();
        timetable = new javax.swing.JButton();
        paymentdetails = new javax.swing.JButton();
        logout = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        home = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        UpC = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        onG = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setText("show");
        jButton2.setBorder(null);
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton2MousePressed(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 287, 90, 20));

        jButton1.setText("show");
        jButton1.setBorder(null);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MousePressed(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 126, 90, 20));

        attendence.setBackground(new java.awt.Color(0, 7, 152));
        attendence.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inf/creation/attendence.jpg"))); // NOI18N
        attendence.setBorder(null);
        attendence.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        attendence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendenceActionPerformed(evt);
            }
        });
        getContentPane().add(attendence, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 341, 42));

        examresults.setBackground(new java.awt.Color(0, 7, 152));
        examresults.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inf/creation/exam results.jpg"))); // NOI18N
        examresults.setBorder(null);
        examresults.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        examresults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                examresultsActionPerformed(evt);
            }
        });
        getContentPane().add(examresults, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 341, 42));

        timetable.setBackground(new java.awt.Color(0, 7, 152));
        timetable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inf/creation/time table.jpg"))); // NOI18N
        timetable.setBorder(null);
        timetable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        timetable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timetableActionPerformed(evt);
            }
        });
        getContentPane().add(timetable, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 341, 42));

        paymentdetails.setBackground(new java.awt.Color(0, 7, 152));
        paymentdetails.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inf/creation/paymebt details.jpg"))); // NOI18N
        paymentdetails.setBorder(null);
        paymentdetails.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        paymentdetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentdetailsActionPerformed(evt);
            }
        });
        getContentPane().add(paymentdetails, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 341, 42));

        logout.setBackground(new java.awt.Color(0, 7, 152));
        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inf/creation/logout.jpg"))); // NOI18N
        logout.setBorder(null);
        logout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        getContentPane().add(logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 320, 341, 42));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Upcoming going Lectures :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 280, 360, 30));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("On going Lectures :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 120, 360, 30));

        home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inf/creation/homebtn.jpg"))); // NOI18N
        home.setBorder(null);
        home.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });
        getContentPane().add(home, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 341, 42));

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        UpC.setBackground(new java.awt.Color(204, 204, 204));
        UpC.setForeground(new java.awt.Color(0, 0, 0));
        UpC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Module Code", "Time", "Lecturer", "Module Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        UpC.setAutoscrolls(false);
        UpC.setRowHeight(20);
        UpC.setSelectionBackground(new java.awt.Color(204, 204, 204));
        UpC.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(UpC);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 310, 550, 120));

        jScrollPane2.setBorder(null);
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        onG.setBackground(new java.awt.Color(204, 204, 204));
        onG.setForeground(new java.awt.Color(0, 0, 0));
        onG.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Module Code", "Time", "Lecturer", "Module Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        onG.setAutoscrolls(false);
        onG.setGridColor(new java.awt.Color(102, 102, 102));
        onG.setRowHeight(20);
        onG.setSelectionBackground(new java.awt.Color(204, 204, 204));
        onG.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane2.setViewportView(onG);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 150, 550, 110));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inf/creation/new new desighn.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 560));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
home home1 = new home();
       home1.setVisible(true);
       this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_homeActionPerformed

    private void attendenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendenceActionPerformed
attendence attendence1 = new attendence();
       attendence1.setVisible(true);
       this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_attendenceActionPerformed

    private void timetableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timetableActionPerformed
timetable timetable1 = new timetable();
       timetable1.setVisible(true);
       this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_timetableActionPerformed

    private void examresultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_examresultsActionPerformed
examresults examresults1 = new examresults();
       examresults1.setVisible(true);
       this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_examresultsActionPerformed

    private void paymentdetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentdetailsActionPerformed
paymentdetails paymentdetails1 = new paymentdetails();
       paymentdetails1.setVisible(true);
       this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_paymentdetailsActionPerformed

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
login frame1 = new login();
        frame1.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_logoutActionPerformed

    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed
        // TODO add your handling code here:
        LoadLecs();
    }//GEN-LAST:event_jButton1MousePressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MousePressed
        // TODO add your handling code here:
        LoadLecsUPC();
    }//GEN-LAST:event_jButton2MousePressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable UpC;
    private javax.swing.JButton attendence;
    private javax.swing.JButton examresults;
    private javax.swing.JButton home;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton logout;
    private javax.swing.JTable onG;
    private javax.swing.JButton paymentdetails;
    private javax.swing.JButton timetable;
    // End of variables declaration//GEN-END:variables

    private void setIconImage() {
       setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icon.png")));
    }
}
